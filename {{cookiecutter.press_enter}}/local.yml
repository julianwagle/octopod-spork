version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_celery: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: backend_local_django
    container_name: django
    depends_on:
      - postgres
      {%- if cookiecutter.use_mailhog == 'y' %}
      - mailhog
      {%- endif %}
    volumes:
      - .:/app:z
      # https://stackoverflow.com/questions/67714136/file-writing-failing-in-docker-production-environment
      - local_celery:/app/celery_data:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: backend_production_postgres
    container_name: postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  {%- if cookiecutter.use_mailhog == 'y' %}

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: mailhog
    ports:
      - "8025:8025"

  {%- endif %}

  redis:
    image: redis:5.0
    container_name: redis

  celeryworker:
    <<: *django
    image: backend_local_celeryworker
    container_name: celeryworker
    depends_on:
      - redis
      - postgres
      {%- if cookiecutter.use_mailhog == 'y' %}
      - mailhog
      {%- endif %}
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: backend_local_celerybeat
    container_name: celerybeat
    depends_on:
      - redis
      - postgres
      {%- if cookiecutter.use_mailhog == 'y' %}
      - mailhog
      {%- endif %}
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: backend_local_flower
    container_name: flower
    ports:
      - "5555:5555"
    command: /start-flower


  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: frontend_local_node
    container_name: node
    depends_on:
      - django
    volumes:
      - .:/app/frontend/:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/frontend/node_modules
    command: npm start
    ports:
      - "3000:3000"
      # Expose browsersync UI: https://www.browsersync.io/docs/options/#option-ui
      - "3001:3001"
